<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Package">

	<!-- IMPORTS -->
	<PropertyGroup>
		<MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\Tools\MSBuildCommunityTasks</MSBuildCommunityTasksPath>
		<MSBuildUmbracoTasksPath>$(MSBuildProjectDirectory)\Tools\MSBuildUmbracoTasks</MSBuildUmbracoTasksPath>
	</PropertyGroup>

	<Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.Targets" />
	<Import Project="$(MSBuildUmbracoTasksPath)\MSBuild.Umbraco.Tasks.Targets" />

	<!-- PROPERTIES -->
	<PropertyGroup>
		<VersionMajor>1</VersionMajor>
		<VersionMinor>0</VersionMinor>
		<VersionPatch>0</VersionPatch>
		<VersionSuffix></VersionSuffix>
		<UmbracoVersion>7.0.0</UmbracoVersion>
	</PropertyGroup>

	<PropertyGroup>
		<RootDir>$(MSBuildProjectDirectory)</RootDir>
		<BuildDir>$(RootDir)\Build</BuildDir>
		<PackageDir>$(RootDir)\..\Releases</PackageDir>
		<CoreProjectDir>$(RootDir)\..\PageNotFoundManager\</CoreProjectDir>
		<AppPluginDir>$(BuildDir)\App_Plugins\PageNotFoundManager</AppPluginDir>
	</PropertyGroup>

	<!-- TARGETS -->

	<!-- CLEAN -->
	<Target Name="Clean">
		<RemoveDir Directories="$(BuildDir)" Condition="Exists('$(BuildDir)')" />
		<MakeDir Directories="$(BuildDir)" />    
		<MakeDir Directories="$(PackageDir)" />
    <MakeDir Directories="$(AppPluginDir)" />
	</Target>

	<!-- UPDATE ASSEMBLEY VERSION -->
	<Target Name="UpdateAssemblyInfo" DependsOnTargets="Clean">
		<Version Major="$(VersionMajor)" Minor="$(VersionMinor)" BuildType="Automatic" RevisionType="Automatic" StartDate="08/03/2013">
			<Output TaskParameter="Build" PropertyName="Build" />
			<Output TaskParameter="Revision" PropertyName="Revision" />
		</Version>
		<AssemblyInfo CodeLanguage="CS"
			OutputFile="$(CoreProjectDir)\Properties\VersionInfo.cs"
			AssemblyVersion="$(VersionMajor).$(VersionMinor).$(VersionPatch)"
			AssemblyFileVersion="$(VersionMajor).$(VersionMinor).$(Build).$(Revision)"
			AssemblyInformationalVersion="$(VersionMajor).$(VersionMinor).$(VersionPatch)$(VersionSuffix)"/>
	</Target>

	<!-- COMPILE -->
	<Target Name="Compile" DependsOnTargets="UpdateAssemblyInfo">
		<MSBuild Projects="$(CoreProjectDir)\PageNotFoundManager.csproj" />
	</Target>

  <!-- PREPARE FILES -->
	<Target Name="PrepairFiles" DependsOnTargets="Compile">
    
    <ItemGroup>
      <PackageFile Include="$(RootDir)\Package.xml" />
      <BinFiles Include="$(CoreProjectDir)\bin\**\PageNotFoundManager.dll" />
	  <ConfigFiles Include="$(CoreProjectDir)\App_Plugins\PageNotFoundManager\*.*" />
	  <ScriptsFiles Include="$(CoreProjectDir)\App_Plugins\PageNotFoundManager\js\*.*" />
	  <StyleFiles Include="$(CoreProjectDir)\App_Plugins\PageNotFoundManager\css\*.*" />
	  <ViewFiles Include="$(CoreProjectDir)\App_Plugins\PageNotFoundManager\backoffice\dialogs\*.*" />
    </ItemGroup>
    
	<Copy SourceFiles="@(ConfigFiles)" DestinationFolder="$(AppPluginDir)" />
	<Copy SourceFiles="@(ScriptsFiles)" DestinationFolder="$(AppPluginDir)\js\" />
	<Copy SourceFiles="@(StyleFiles)" DestinationFolder="$(AppPluginDir)\css\" />
	<Copy SourceFiles="@(ViewFiles)" DestinationFolder="$(AppPluginDir)\backoffice\dialogs\" />
    <Copy SourceFiles="@(PackageFile)" DestinationFolder="$(BuildDir)" />       
    <Copy SourceFiles="@(BinFiles)"
    DestinationFiles="@(BinFiles->'$(BuildDir)\bin\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

    
	<!-- MANIFEST -->
	<Target Name="Manifest" DependsOnTargets="PrepairFiles">
		<ItemGroup>
			<ManifestFiles Include="$(BuildDir)\**\*" Exclude="$(BuildDir)\Package.xml" />
		</ItemGroup>
		<ManifestUpdate ManifestFile="$(BuildDir)\package.xml"
			WorkingDirectory="$(BuildDir)"
			MinimumRequiredUmbracoVersion="$(UmbracoVersion)"
			PackageVersion="$(VersionMajor).$(VersionMinor).$(VersionPatch)$(VersionSuffix)"
			Files="@(ManifestFiles)" />
	</Target>

	<!-- PACKAGE -->
	<Target Name="Package" DependsOnTargets="Manifest">
		<ItemGroup>
			<PackageFiles Include="$(BuildDir)\**\*.*" />
		</ItemGroup>
		<Package ManifestFile="$(BuildDir)\Package.xml"
			WorkingDirectory="$(BuildDir)"
			OutputDirectory="$(PackageDir)"
			Files="@(PackageFiles)" />
        <RemoveDir Directories="$(BuildDir)" Condition="Exists('$(BuildDir)')" />
	</Target>

</Project>